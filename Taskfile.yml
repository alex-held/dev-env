# https://taskfile.dev

version: '3'
output: prefixed

vars:
  PROJECT: devctl
  GIT_COMMIT:
    sh: git log -n 1 --format=%h

tasks:
  
  tidy:
    desc: Tidies go.mod and go.sum
    summary: |
      Cleans up dependencies inside go.mod and go.sum.
      Make sure no unnecessary dependecies are present
    cmds:
      - go mod tidy -v
      - git diff-index --quiet HEAD
  
  
  install-deps:
    desc: Installs all required tooling and dependencies
    cmds:
      - go mod download
      - go get -u
  
  
  
  install:
    desc: Installs {{.PROJECT}} into GOBIN
    cmds:
      - task: build
      - cp {{.PROJECT}} {{.GOPATH}}/bin/{{.PROJECT}}
  
  run:
    desc: Runs {{.PROJECT}}
    cmds:
      - task: build
      - ./{{.PROJECT}} {{.ARGS}}
    env:
      ARGS:
  
  build:
    desc: Builds {{.PROJECT}}
    cmds:
      - task: install-deps
      - go build -v -o {{.PROJECT}}
  
  test-quiet:
    desc: Tests {{.PROJECT}} quietly
    cmds:
      - go test --short ./...
  
  cover:
    desc: Tests & Covers {{.PROJECT}}
    summary: |
      Tests & Covers {{.PROJECT}}
      
      It will test your project and collects the coverage.
      The coverage gets saved to coverage.out
    cmds:
      - go test -v -cover  -coverprofile=coverage.out  ./...

  lint-silently:
    desc: Lints & Fixes {{.PROJECT}}
    cmds:
      - golangci-lint run ./... --fix
  
  lint:
    desc: Lints & Fixes {{.PROJECT}}
    cmds:
      - golangci-lint -v --color=always run ./...  --fix
